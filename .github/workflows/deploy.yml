name: Deploy VybChat to EC2

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd ~/Test/server

            # Backup chat history before deployment
            echo "📦 Backing up chat history..."
            if [ -f chat-backup.json ]; then
              cp chat-backup.json chat-backup-$(date +%Y%m%d_%H%M%S).json
              echo "✅ Chat history backed up"
            else
              echo "ℹ️ No existing chat history found"
            fi            # Backup current chat state if server is running
            if pm2 list | grep -q "vybchat.*online"; then
              echo "💾 Creating backup from running server..."
              # Try API backup first (preferred method)
              if curl -f -X POST http://localhost:${{ secrets.PORT }}/api/backup > /dev/null 2>&1; then
                echo "✅ API backup completed successfully"
              else
                echo "⚠️ API backup failed, trying backup script..."
                if [ -f backup.js ]; then
                  node backup.js || echo "⚠️ Backup script failed, continuing with deployment"
                else
                  echo "⚠️ backup.js not found, skipping live backup"
                fi
              fi
            fi

            git fetch origin
            git reset --hard origin/production            
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
            echo "EC2_ENV=true" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env            
            echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> .env
            echo "LIVEKIT_API_KEY=${{ secrets.LIVEKIT_API_KEY }}" >> .env
            echo "LIVEKIT_SECRET_KEY=${{ secrets.LIVEKIT_SECRET_KEY }}" >> .env
            echo "LIVEKIT_WS_URL=${{ secrets.LIVEKIT_WS_URL }}" >> .env
            echo "EnableStream=${{ secrets.EnableStream }}" >> .env
            npm install
            rm -rf dist build .next .cache tmp
            
            # Skip build step since this is a Node.js server (no build required)
            echo "ℹ️ Skipping build step for Node.js server"
              # Stop server gracefully to allow chat backup
            pm2 delete vybchat || true
            pm2 flush
            
            # Start server (it will automatically restore chat history)
            pm2 start npm --name vybchat -- run start
            
            # Wait for server to start and restore chat history
            echo "⏳ Waiting for server to start..."
            sleep 10
              # Verify server is running
            if pm2 list | grep -q "vybchat.*online"; then
              echo "✅ Server started successfully"
              
              # Test backup endpoint to ensure it's working
              echo "🧪 Testing backup endpoint..."
              sleep 5  # Give server more time to fully initialize
              if curl -f -X POST http://localhost:${{ secrets.PORT }}/api/backup > /dev/null 2>&1; then
                echo "✅ Backup endpoint is working correctly"
              else
                echo "⚠️ Backup endpoint test failed, but server is running"
              fi
              
              # Clean up backup file after successful restore
              if [ -f chat-backup.json ]; then
                rm chat-backup.json
                echo "🗑️ Backup file cleaned up after successful restore"
              fi
            else
              echo "❌ Server failed to start"
              exit 1
            fi
            
            echo "🚀 Deployment completed successfully!"
          EOF
